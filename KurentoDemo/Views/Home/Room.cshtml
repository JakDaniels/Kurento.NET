@section libs{
    <script src="~/lib/adapter.js"></script>
    <script src="~/lib/kurento-utils.js"></script>
}
<div class="room">
    <div>
        当前：{{userName}}
        <button v-on:click="toggleUserType">视频</button>
    </div>
    <sender ref="senders" v-for="s in senders" :id="s.id" :name="s.name" :key="s.id" :is-self="s.id==clientId"></sender>
    <receiver v-for="r in receivers" :id="r.id" :name="r.name" :key="r.id"></receiver>
</div>
@section scripts{
    <script src="~/js/zb.js"></script>
    <script src="~/js/service.js"></script>
    <script>
        zb.addComponent("sender");
        zb.addComponent("receiver");
        var app = new Vue({
            el: ".room",
            data: {
                clientId: uuidv4(),
                roomName: "room1",
                userName: "guest",
                room: {
                    name: "",
                    users: []
                }
            },
            computed: {
                users: function () {
                    return this.room.users;
                },
                senders: function () {
                    return this.users.filter(function (u) { return u.type == 1; });
                },
                receivers: function () {
                    return this.users.filter(function (u) { return u.type == 0; });
                },
                user: function () {
                    var that = this;
                    return this.users.find(function (u) { return u.id == that.clientId; });
                }
            },
            methods: {
                toggleUserType: function () {
                    service.invoke("ModifyUserType", this.user.id, !this.user.type);
                },
                getSender: function (id) {
                    return this.$refs.senders.find(function (s) {
                        return s.id == id;
                    });
                }
            },
            created: function () {
                var that = this;
                var time = "" + new Date().getTime();
                var num = time.substr(time.length - 3, 3);
                that.userName = "guest" + num;
                service.start("/roomhub?clientId=" + that.clientId + "&roomName=" + that.roomName + "&userName=" + that.userName);
                service.on("initRoom", function (room) {
                    that.room = room;
                });
                service.on("addCandidate", function (id, candidate) {
                    that.getSender(id).addCandidate(candidate);
                });
                service.on("processAnswer", function (id, answer) {
                    that.getSender(id).processAnswer(answer);
                });
                service.on("modifyUser", function (user) {
                    var index = that.users.findIndex(function (u) { return u.id == user.id });
                    that.room.users.splice(index, 1, user);
                });
                service.on("AddUser", function (user) {
                    that.room.users.push(user);
                });
                service.on("RemoveUser", function (id) {
                    var index = that.users.findIndex(function (u) { return u.id == id });
                    that.room.users.splice(index, 1);
                });
                service.on("Pong", function () {

                });
                window.onbeforeunload = function () {
                    service.stop();
                };
            }
        });
    </script>
}